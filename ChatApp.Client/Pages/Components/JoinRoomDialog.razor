@using ChatApp.Client.Data
@inject IChatService ChatService

<button type="button" class="btn btn-primary w-95 my-1" @onclick="toggleDisplayModal"> Join Room </button>

<div class="modal" id="joinRoomModal" tabindex="-1" role="dialog" aria-labelledby="joinRoomModalLabel" aria-hidden="true" style="display:@(toggleModal ? "initial" : "none");">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Modal title</h5>
                <button type="button" class="btn-close" @onclick="toggleDisplayModal">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>

            <div class="modal-body">
                <div class="form-group">
                    <label for="roomIdInput" class="col-form-label">
                        Room ID:
                    </label>

                    <div class="col-sm-10">
                        <input class="form-control" id="roomIdInput" placeholder="Enter Room ID" @bind="roomId" />
                    </div>
                </div>

                <label style="height:30px;color:red">
                    @roomIdError
                </label>

                <label style="height:30px;color:red">
                    @error
                </label>
            </div>

            <div class="modal-footer">
                <button type="button" class="btn btn-primary" @onclick="JoinRoom">Join Room</button>
            </div>
        </div>
    </div>
</div>

@code {
    string roomId = "";
    string roomIdError = "";
    string error = "";
    bool toggleModal = false;

    [Parameter] public EventCallback<ChatRoom> JoinRoomCallback { get; set; }

    protected async void JoinRoom()
    {
        if (!validateInput())
        {
            StateHasChanged();
            return;
        }

        int roomIdNumber = int.Parse(roomId);

        ChatRoom chatRoom = await ChatService.JoinChatRoom(roomIdNumber);

        if (chatRoom == null)
        {
            error = "Unable to join chatroom.";
            StateHasChanged();
            return;
        }

        await JoinRoomCallback.InvokeAsync(chatRoom);

        toggleDisplayModal();
        StateHasChanged();
    }

    protected void toggleDisplayModal()
    {
        toggleModal = !toggleModal;
    }

    private bool validateInput()
    {
        bool valid = true;

        if (roomId == null || !int.TryParse(roomId, out _))
        {
            roomIdError = "Enter valid room ID.";
            valid = false;
        }
        else
        {
            roomIdError = "";
        }

        return valid;
    }
}